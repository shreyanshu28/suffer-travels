@using Suffer_Travels.ViewModel
@model TourViewModel;
@{
    ViewData["title"] = "Manage Tour";
    Layout = "~/Views/Shared/User/_Admin.cshtml";
}

<main class="container p-3">
    <div class="nav-container" style="position:relative">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-controller="User" asp-action="Home">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a asp-controller="User" asp-action="Home">Tours</a>
            </li>
            <li class="breadcrumb-item active mr-auto">Manage Tours</li>
        </ol>
        <button type="button" class="btn btn-primary" style="position:absolute;right:1rem;top:50%;transform:translateY(-50%);" data-bs-toggle="modal" data-bs-target="#AddDetailsModal">Add new tour</button>
        
        <partial name="AddTourDetailsPartial.cshtml" />

    </div>
    <div class="table-responsive">
        <table class="table table-dark table-hover">
            <thead>
                <tr>
                    <th>
                        Tour Name
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Total Seats
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Number of Days
                    </th>
                    <th>
                        Tour Type
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.tourDetails)
                {
                    <tr>
                        <td>
                            @item.TourName
                        </td>
                        <td>
                            @item.Description
                        </td>
                        <td>
                            @item.TotalSeats
                        </td>
                        <td>
                            @item.Price
                        </td>
                        <td>
                            @item.NoOfDays
                        </td>
                        <td>
                            @Model.tourTypes.First(tourType => tourType.TtId == item.TourTypeId).TtName
                        </td>
                        <td colspan="2">
                            <a class="btn btn-success mx-2 mb-2" asp-controller="Admin" asp-action="EditTour" asp-route-id=@item.TId >Edit</a>
                            @if(@item.IsActive){
                                <a class="btn btn-danger mx-2" asp-controller="Admin" asp-action="DeactivateTour" asp-route-id="@item.TId" >Deactivate</a>
                            }
                            else
                            {
                                <a class="btn btn-primary mx-2" asp-controller="Admin" asp-action="ActivateTour" asp-route-id="@item.TId" >Activate</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</main>

<script>
    const types = document.getElementById("type");
    const tourTypeSelector = document.getElementById("tourType");
    let cnt = 0;

    types.addEventListener("change", function (event) 
    {
      // to add new types input if not already
      if (types.value === "0" && cnt === 0) {

          tourTypeSelector.type = "text";
          cnt = 1;

      } 
      else 
      {
        if (cnt !== 0) 
        {

          // remove when type already exists
          tourTypeSelector.type = "hidden";

        }

        cnt = 0;
      }
});
</script>

@section scripts { 
    @{
        <partial name="_ValidationScriptsPartial" />
    } 
}